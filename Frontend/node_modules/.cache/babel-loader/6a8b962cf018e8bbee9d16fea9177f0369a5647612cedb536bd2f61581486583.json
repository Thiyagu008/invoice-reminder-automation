{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\tencergo_project\\\\frontend\\\\frontend\\\\src\\\\components\\\\Login.js\";\n// import React from 'react';\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n\n// const Login = ({ setUser }) => {\n//   const handleLogin = async (credentialResponse) => {\n//     try {\n//       const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, {\n//         token: credentialResponse.credential\n//       }, {\n//         withCredentials: true,\n//       });\n//       setUser(res.data);\n//     } catch (error) {\n//       console.error('Login failed', error);\n//     }\n//   };\n\n//   return (\n//     <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n//       <div>\n//         <h2>Login with Google</h2>\n//         <GoogleLogin\n//           onSuccess={handleLogin}\n//           onError={() => console.error('Login Failed')}\n//         />\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default Login;\n\nimport React from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUser\n}) => {\n  const handleLogin = async credentialResponse => {\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, {\n        token: credentialResponse.credential\n      }, {\n        withCredentials: true\n      });\n      setUser(res.data);\n    } catch (error) {\n      console.error('Login failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleLogin,\n        onError: () => console.error('Login Failed')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","GoogleOAuthProvider","GoogleLogin","axios","jsxDEV","_jsxDEV","Login","setUser","handleLogin","credentialResponse","res","post","process","env","REACT_APP_BACKEND_URL","token","credential","withCredentials","data","error","console","clientId","REACT_APP_GOOGLE_CLIENT_ID","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["C:/Users/User/tencergo_project/frontend/frontend/src/components/Login.js"],"sourcesContent":["// import React from 'react';\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n\r\n// const Login = ({ setUser }) => {\r\n//   const handleLogin = async (credentialResponse) => {\r\n//     try {\r\n//       const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, {\r\n//         token: credentialResponse.credential\r\n//       }, {\r\n//         withCredentials: true,\r\n//       });\r\n//       setUser(res.data);\r\n//     } catch (error) {\r\n//       console.error('Login failed', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\r\n//       <div>\r\n//         <h2>Login with Google</h2>\r\n//         <GoogleLogin\r\n//           onSuccess={handleLogin}\r\n//           onError={() => console.error('Login Failed')}\r\n//         />\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\nimport React from 'react';\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ setUser }) => {\r\n  const handleLogin = async (credentialResponse) => {\r\n    try {\r\n      const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/auth/google`, {\r\n        token: credentialResponse.credential\r\n      }, {\r\n        withCredentials: true,\r\n      });\r\n      setUser(res.data);\r\n    } catch (error) {\r\n      console.error('Login failed', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\r\n      <div>\r\n        <h2>Login with Google</h2>\r\n        <GoogleLogin\r\n          onSuccess={handleLogin}\r\n          onError={() => console.error('Login Failed')}\r\n        />\r\n      </div>\r\n    </GoogleOAuthProvider>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC7B,MAAMC,WAAW,GAAG,MAAOC,kBAAkB,IAAK;IAChD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,cAAc,EAAE;QAC/EC,KAAK,EAAEN,kBAAkB,CAACO;MAC5B,CAAC,EAAE;QACDC,eAAe,EAAE;MACnB,CAAC,CAAC;MACFV,OAAO,CAACG,GAAG,CAACQ,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;EAED,oBACEd,OAAA,CAACJ,mBAAmB;IAACoB,QAAQ,EAAET,OAAO,CAACC,GAAG,CAACS,0BAA2B;IAAAC,QAAA,eACpElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BtB,OAAA,CAACH,WAAW;QACV0B,SAAS,EAAEpB,WAAY;QACvBqB,OAAO,EAAEA,CAAA,KAAMT,OAAO,CAACD,KAAK,CAAC,cAAc;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE1B,CAAC;AAACG,EAAA,GAzBIxB,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}